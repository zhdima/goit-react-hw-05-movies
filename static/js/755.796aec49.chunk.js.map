{"version":3,"file":"static/js/755.796aec49.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","pages/MovieDetails.js","services/movies-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const PosterWrap = styled.div`\n  flex-basis: 200px;\n`;\n\nexport const Poster = styled.img`\n  min-width: 200px;\n`;\n\nexport const InfoWrap = styled.div`\n`;\n\nexport const InfoText = styled.p`\n  margin: 16px 0;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, PosterWrap, Poster, InfoWrap, InfoText } from './MovieInfo.styled';\nimport NoPoster from '../../images/noposter.png';\n\nconst baseImageURL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const MovieInfo = ({ info: { title, poster_path, release_date, vote_average, overview, genres = [] } }) => {\n  return (\n    <Container>\n      <PosterWrap>\n        <Poster src={poster_path ? `${baseImageURL}${poster_path}` : NoPoster} alt={title} />\n      </PosterWrap>\n      <InfoWrap>\n        <h1>{title}{release_date ? ` (${release_date.slice(0, 4)})` : ''}</h1>\n        <InfoText>User Score: {vote_average ? `${Math.round(vote_average * 10)}%` : '-'}</InfoText>\n        <h3>Overview</h3>\n        <InfoText>{overview || 'no info'}</InfoText>\n        <h3>Genres</h3>\n        <InfoText>{genres.length ? genres.map(el => el.name).join(', ') : 'no info'}</InfoText>\n      </InfoWrap>\n    </Container>\n  );\n};\n\nMovieInfo.propTypes = {\n  info: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      release_date: PropTypes.string,\n      vote_average: PropTypes.number,\n      overview: PropTypes.string,\n    }).isRequired,\n};\n\n","import { Suspense } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovieDetails } from '../services/movies-api'\nimport { MovieInfo } from '../components/MovieInfo/MovieInfo';\nimport { Loader } from '../components/Loader/Loader';\nimport { ErrorInfo, BackLink } from '../components/SharedLayout/SharedLayout.styled';\nimport { HiArrowLeft } from \"react-icons/hi\";\n\nconst Status = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  RESOLVE: 'resolve',\n  ERROR: 'error'\n}\n\nconst MovieDetails = () => {\n\n  const [details, setDetails] = useState();\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? \"/\");\n\n  useEffect(() => {\n      setStatus(Status.LOADING);\n      getMovieDetails(movieId)\n        .then(data => {\n          setDetails(data);\n          setStatus(Status.RESOLVE);\n        })\n        .catch(err => {\n          setDetails({});\n          setError(String(err));\n          setStatus(Status.ERROR);\n        });\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={backLinkRef.current}><HiArrowLeft size=\"12\" />Go back</BackLink>\n      <br/>\n      {details && <MovieInfo info={details} />}\n      {status === Status.LOADING && <Loader />}\n      {status === Status.ERROR && <ErrorInfo>{error}</ErrorInfo>}\n\n      <hr/>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <hr />\n      \n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API  = 'df88ba4f44a5ed712dd0a71f1b3d877c';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY_API}`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovies(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY_API}&query=${query}`   \n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY_API}`\n  );\n  return response.data;\n}\n\nexport async function getMovieCast(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY_API}`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY_API}`\n  );\n  return response.data;\n}\n"],"names":["Container","styled","PosterWrap","Poster","InfoWrap","InfoText","MovieInfo","info","title","poster_path","release_date","vote_average","overview","genres","src","NoPoster","alt","slice","Math","round","length","map","el","name","join","Status","useState","details","setDetails","status","setStatus","error","setError","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","getMovieDetails","then","data","catch","err","String","to","current","size","Loader","Suspense","fallback","BASE_URL","KEY_API","getTrendingMovies","axios","response","getSearchMovies","query","getMovieCast","getMovieReviews"],"sourceRoot":""}