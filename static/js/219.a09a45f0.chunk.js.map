{"version":3,"file":"static/js/219.a09a45f0.chunk.js","mappings":"6QAEaA,EAAWC,EAAAA,GAAAA,GAAH,4JAWRC,EAAWD,EAAAA,GAAAA,GAAH,sGAIRE,EAAYF,EAAAA,GAAAA,IAAH,0C,mBCPhBG,EACE,OADFA,EAEK,UAFLA,EAGK,UAHLA,EAIG,QAgDT,EA7Ca,WAEX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAASD,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACNL,EAAUL,IACVW,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAAAC,GACJV,EAAQU,EAAKX,MACbG,EAAUL,EACX,IACAc,OAAM,SAAAC,GACLZ,EAAQ,IACRI,EAASS,OAAOD,IAChBV,EAAUL,EACX,GACN,GAAE,CAACQ,KAGF,gCACE,eAAIS,UAAU,kBAAd,kBACCb,IAAWJ,IACTE,EAAKgB,QACJ,SAACtB,EAAD,UACGM,EAAKiB,KAAI,SAAAC,GAAI,OACZ,UAACtB,EAAD,YACE,SAACC,EAAD,CAAWsB,IAAKD,EAAKE,aAAL,UAvCX,mCAuCW,OAAsCF,EAAKE,cAAiBC,EAASC,IAAKJ,EAAKK,iBAC/F,wBAAKL,EAAKM,QACV,uCAAeN,EAAKO,eAHPP,EAAKQ,UADR,OAQd,kFAGLxB,IAAWJ,IAAkB,SAAC6B,EAAA,EAAD,IAC7BzB,IAAWJ,IAAgB,SAAC,KAAD,UAAYM,MAG7C,C,mMC1DKwB,EAAW,gCACXC,EAAW,mCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACCG,EADD,yBAIEA,EAASrB,MAJX,kEAOA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BK,IAFjD,cACCF,EADD,yBAIEA,EAASrB,MAJX,kEAOA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAA+B7B,GAA/B,uFACkByB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDtB,EADC,oBACkBuB,IAFpC,cACCG,EADD,yBAIEA,EAASrB,MAJX,kEAOA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,uFACkByB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDtB,EADC,4BAC0BuB,IAF5C,cACCG,EADD,yBAIEA,EAASrB,MAJX,kEAOA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAA+B9B,GAA/B,uFACkByB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDtB,EADC,4BAC0BuB,IAF5C,cACCG,EADD,yBAIEA,EAASrB,MAJX,kE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","services/movies-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\n  --items: 6;\n  --gap: 20px;\n\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--gap);\n  padding: 0 20px;\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc((100% - var(--gap) * (var(--items) - 1)) / var(--items));\n`;\n\nexport const CastImage = styled.img`\n  width: 200px; \n`;\n","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from '../../services/movies-api'\nimport { Loader } from '../Loader/Loader';\nimport { ErrorInfo } from '../SharedLayout/SharedLayout.styled';\nimport { CastList, CastItem, CastImage } from \"./Cast.styled\";\nimport NoPhoto from '../../images/nophoto.png';\n\nconst baseImageURL = \"https://image.tmdb.org/t/p/w500\";\n\nconst Status = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  RESOLVE: 'resolve',\n  ERROR: 'error'\n}\n\nconst Cast = () => {\n\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n      setStatus(Status.LOADING);\n      getMovieCast(movieId)\n        .then(data => {\n          setCast(data.cast);\n          setStatus(Status.RESOLVE);\n        })\n        .catch(err => {\n          setCast([]);\n          setError(String(err));\n          setStatus(Status.ERROR);\n        });\n  }, [movieId]);\n\n  return (\n    <section>\n      <h2 className=\"visually-hidden\">Cast</h2>\n      {status === Status.RESOLVE &&\n        (cast.length ?\n          <CastList>\n            {cast.map(item =>\n              <CastItem key={item.credit_id}>\n                <CastImage src={item.profile_path ? `${baseImageURL}${item.profile_path}` : NoPhoto} alt={item.original_name} />\n                <h4>{item.name}</h4>\n                <p>Character: {item.character}</p>\n              </CastItem>\n            )}\n          </CastList>\n          : <p>Sorry, we don't have cast information for this movie.</p>\n        )\n      }\n      {status === Status.LOADING && <Loader />}\n      {status === Status.ERROR && <ErrorInfo>{error}</ErrorInfo>}\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API  = 'df88ba4f44a5ed712dd0a71f1b3d877c';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY_API}`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovies(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY_API}&query=${query}`   \n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY_API}`\n  );\n  return response.data;\n}\n\nexport async function getMovieCast(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY_API}`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY_API}`\n  );\n  return response.data;\n}\n"],"names":["CastList","styled","CastItem","CastImage","Status","useState","cast","setCast","status","setStatus","error","setError","movieId","useParams","useEffect","getMovieCast","then","data","catch","err","String","className","length","map","item","src","profile_path","NoPhoto","alt","original_name","name","character","credit_id","Loader","BASE_URL","KEY_API","getTrendingMovies","axios","response","getSearchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}